package Practica_01;

import static org.junit.jupiter.api.Assertions.*;

import java.io.File;
import java.util.ArrayList;
import org.junit.jupiter.api.Test;

class NbaJUnitTest{
	private static String file = System.getProperty("user.dir")
			+File.separator+"src"
			+File.separator+"Practica_01"
			+File.separator;
	
	@Test
    void testVacio() {
		BestPlayersV22.load(file+"Vacio.txt");
		BestPlayersV22.numPlayers=10;
        try {
            BestPlayersV22.bestPlayersV2();
            fail("Debería haber lanzado una excepción");
        } catch (RuntimeException e) {
            assertEquals("No hay jugadores", e.getMessage());
        }
    }		
	@Test
	void test10Mejores() {
		
		BestPlayersV22.load(file+"NbaStats.txt");
		ArrayList<Player> Array1 = BestPlayersV22.bestPlayersV2();
		 
		assertEquals( 
				"[# --> Name: LeBron James, Positions: [SG, SF, PF], Teams: [CLE, MIA]Puntos: 1031, " + 
				"# --> Name: James Harden, Positions: [SG, PG], Teams: [OKC, HOU]Puntos: 994, " + 
				"# --> Name: Stephen Curry, Positions: [PG], Teams: [GSW]Puntos: 975, " + 
				"# --> Name: Karl-Anthony Towns, Positions: [C], Teams: [MIN]Puntos: 965, " + 
				"# --> Name: Russell Westbrook, Positions: [PG], Teams: [OKC]Puntos: 931, " + 
				"# --> Name: Anthony Davis, Positions: [PF, C], Teams: [NOH, NOP]Puntos: 894, " + 
				"# --> Name: Kevin Durant, Positions: [SG, SF], Teams: [SEA, OKC, GSW]Puntos: 864, " + 
				"# --> Name: Damian Lillard, Positions: [PG], Teams: [POR]Puntos: 825, " + 
				"# --> Name: DeMar DeRozan, Positions: [SG], Teams: [TOR]Puntos: 820, " + 
				"# --> Name: Wilt Chamberlain*, Positions: [C], Teams: [PHW, SFW, TOT, PHI, LAL]Puntos: 785]",Array1.toString());
		
	}	
}
